openapi: 3.0.3
# security:
#   - ApiKeyAuth: []
info:
  title: Santa's Reindeer Management API
  description: CRUD API for managing reindeer assignments to santas sleigh.
  version: 1.0.0
servers:
  - url: https://api.northpole.santa/sleighs
paths:
  /reindeers:
    post:
      summary: Add a reindeer to a country-specific sleigh
      operationId: addReindeerToSleigh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewReindeer"
            examples:
                validRudolphRequest:
                  summary: Rudolph Request
                  value:
                    name: Rudolph
                    age: 6
                    nose_colour: red
                validPrancerRequest:
                  summary: Prancer Request
                  value:
                    name: Prancer
                    age: 10
                    nose_colour: green
                validRudolphRequestWithNotes:
                  summary: Rudolph Request with notes
                  value:
                    name: Rudolph
                    age: 6
                    nose_colour: red
                    notes: Rudolph has a shiny nose.
                validPrancerRequestWithNotes:
                  summary: Prancer Request with notes
                  value:
                    name: Prancer
                    age: 10
                    nose_colour: green
                    notes: Prancer has bells on his antlers.
                invalidNameRequest:
                  summary: Invalid name request
                  value:
                    name: Steve
                    age: 6
                    nose_colour: red
                invalidAgeRequest:
                  summary: Invalid age request
                  value:
                    name: Rudolph
                    age: 101
                    nose_colour: red
                invalidNoseColourRequest:
                  summary: Invalid nose colour request
                  value:
                    name: Rudolph
                    age: 5
                    nose_colour: purple
                missingName:
                  summary: Request with missing name field
                  value:
                    age: 5
                    nose_colour: red
                missingAge:
                  summary: Request with missing age field
                  value:
                    name: Dasher
                    nose_colour: red
                missingNoseColour:
                  summary: Request with missing nose colour field
                  value:
                    name: Dasher
                    age: 5
                missingNameInvalidColour:
                  summary: Request with missing name field and invalid colour field
                  value:
                    age: 5
                    nose_colour: black
                invalidNameInvalidAgeInvalidColour:
                  summary: Request with invaid name, age and colour fields
                  value:
                    name: Steve
                    age: 200
                    nose_colour: orange
                invalidNotesLength:
                  summary: Request with notes exceeding maximum length
                  value:
                    name: Rudolph
                    age: 5
                    nose_colour: red
                    notes: >
                      Rudolph has a shiny nose that lights up the night sky. Rudolph has a shiny nose that lights up the night sky.
                      Rudolph has a shiny nose that lights up the night sky. Rudolph has a shiny nose that lights up the night sky.
                      Rudolph has a shiny nose that lights up the night sky. Rudolph has a shiny nose that lights up the night sky.
      responses:
        "201":
          description: Reindeer added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reindeer'
              examples:
                successfulRudolphResponse:
                  summary: Response for successfully adding Rudolph
                  value:
                    id: reindeer1
                    name: Rudolph
                    age: 6
                    nose_colour: red
                successfulPrancerResponse:
                  summary: Response for successfully adding Prancer
                  value:
                    id: reindeer2
                    name: Prancer
                    age: 10
                    nose_colour: green
                successfulRudolphResponseWithNotes:
                  summary: Response for successfully adding Rudolph with notes
                  value:
                    id: reindeer1
                    name: Rudolph
                    age: 6
                    nose_colour: red
                    notes: Rudolph has a shiny nose.
                successfulPrancerResponseWithNotes:
                  summary: Response for successfully adding Prancer with notes
                  value:
                    id: reindeer2
                    name: Prancer
                    age: 10
                    nose_colour: green
                    notes: Prancer has bells on his antlers.
        "400":
          description: Bad request - validation errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: General error message for the bad request.
                  details:
                    type: array
                    maxItems: 3
                    items:
                      type: string
                      description: Specific error details.
              examples:
                invalidNameError:
                  summary: Error response for invalid name
                  value:
                    error: Invalid request body
                    details:
                      - "The 'name' field must be one of: Dasher, Dancer, Prancer, Vixen, Comet, Cupid, Donner, Blitzen, Rudolph."
                invalidAgeError:
                  summary: Error response for invalid age
                  value:
                    error: Invalid request body
                    details:
                      - The 'age' field must be an integer between 0 and 100.
                invalidNoseColourError:
                  summary: Error response for invalid nose colour
                  value:
                    error: Invalid request body
                    details:
                      - "The 'nose_colour' field must be one of: red, blue, green."
                missingNameError:
                  summary: Error response for missing name field
                  value:
                    error: Invalid request body
                    details:
                      - The 'name' field is required.
                missingAgeError:
                  summary: Error response for missing age field
                  value:
                    error: Invalid request body
                    details:
                      - The 'age' field is required.
                missingNoseColourError:
                  summary: Error response for missing nose colour field
                  value:
                    error: Invalid request body
                    details:
                      - The 'nose_colour' field is required.
                missingNameInvalidColour:
                  summary: Error response for missing name and invalid colour
                  value:
                    error: Invalid request body
                    details:
                      - The 'name' field is required.
                      - "The 'nose_colour' field must be one of: red, blue, green."
                invalidNameInvalidAgeInvalidColour:
                  summary: Error response for invalid name, age, and colour
                  value:
                    error: Invalid request body
                    details:
                      - "The 'name' field must be one of: Dasher, Dancer, Prancer, Vixen, Comet, Cupid, Donner, Blitzen, Rudolph."
                      - The 'age' field must be an integer between 0 and 100.
                      - "The 'nose_colour' field must be one of: red, blue, green."
                invalidNotesLength:
                  summary: Error response for notes exceeding maximum length
                  value:
                    error: Invalid request body
                    details:
                      - The 'notes' field must be at most 100 characters long.
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
    get:
      summary: List reindeer assigned to santas sleigh
      operationId: getReindeerForSleigh
      responses:
        "200":
          description: List of reindeer for santas sleigh.
          content:
            application/json:
              schema:
                type: array
                maxItems: 9
                minItems: 0
                items:
                  $ref: "#/components/schemas/Reindeer"
              examples:
                oneReindeer:
                  summary: Single reindeer response
                  value:
                    - id: reindeer1
                      name: Rudolph
                      age: 6
                      nose_colour: red
                      notes: Rudolph has a shiny nose.
                allReindeer:
                  summary: All reindeers response
                  value:
                    - id: reindeer1
                      name: Rudolph
                      age: 6
                      nose_colour: red
                      notes: Rudolph has a shiny nose.
                    - id: reindeer2
                      name: Prancer
                      age: 10
                      nose_colour: green
                    - id: reindeer3
                      name: Dasher
                      age: 5
                      nose_colour: red
                    - id: reindeer4
                      name: Dancer
                      age: 7
                      nose_colour: blue
                      notes: Dancer is a graceful reindeer.
                    - id: reindeer5
                      name: Vixen
                      age: 8
                      nose_colour: red
                    - id: reindeer6
                      name: Comet
                      age: 9
                      nose_colour: green
                    - id: reindeer7
                      name: Cupid
                      age: 4
                      nose_colour: red
                    - id: reindeer8
                      name: Donner
                      age: 3
                      notes: Donner is a strong reindeer.
                      nose_colour: blue
                    - id: reindeer9
                      name: Blitzen
                      age: 2
                      nose_colour: green
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /reindeers/{reindeerId}:
    get:
      summary: Get specific reindeer details
      operationId: getReindeer
      parameters:
        - in: path
          name: reindeerId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reindeer"
      responses:
        "200":
          description: Specific reindeer details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reindeer"
              examples:
                Rudolph:
                  summary: Rudolph response
                  value:
                    - id: reindeer1
                      name: Rudolph
                      age: 6
                      nose_colour: red
                      notes: Rudolph has a shiny nose.
                Comet:
                  summary: Comet response
                  value:
                    - id: reindeer6
                      name: Comet
                      age: 9
                      nose_colour: green
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/Reindeer_404"
        "500":
          $ref: "#/components/responses/500"

    delete:
      summary: Remove a reindeer from santas sleigh
      operationId: deleteReindeerFromSleigh
      parameters:
        - in: path
          name: reindeerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Reindeer removed successfully.
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/Reindeer_404"
        "500":
          $ref: "#/components/responses/500"

    put:
      summary: Update reindeer details for a specific sleigh
      operationId: updateReindeerInSleigh
      parameters:
        - in: path
          name: reindeerId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reindeer"
      responses:
        "200":
          description: Reindeer updated successfully.
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/Reindeer_404"
        "500":
          $ref: "#/components/responses/500"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    NewReindeer:
      type: object
      required:
        - name
        - age
        - nose_colour
      properties:
        name:
          type: string
          description: Name of the reindeer.
          example: Dasher
          enum:
            - Dasher
            - Dancer
            - Prancer
            - Vixen
            - Comet
            - Cupid
            - Donner
            - Blitzen
            - Rudolph
        age:
          type: integer
          description: Age of the reindeer in years.
          example: 5
          minimum: 0
          maximum: 100
        nose_colour:
          type: string
          description: Colour of the reindeer's nose.
          example: red
          enum:
            - red
            - blue
            - green
        notes:
          type: string
          description: Additional notes about the reindeer.
          example: Rudolph has a shiny nose.
          maxLength: 100

    Reindeer:
      allOf:
        - $ref: "#/components/schemas/NewReindeer"
        - type: object
          properties:
            id:
              type: string
              description: Unique identifier for the reindeer.
              example: reindeer1

  responses:
    "401":
          description: Unauthorized - API key is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A message indicating authorization failure.
              examples:
                missingApiKey:
                  summary: Missing API Key
                  value:
                    error: Unauthorized - API key is required.
    "Reindeer_404":
      description: Not Found - reindeer with the specified ID does not exist.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: A message indicating that the resource was not found.
          examples:
            reindeerNotFound:
              summary: Reindeer not found
              value:
                error: Reindeer with the specified ID was not found.
    "500":
      description: Internal Server Error - something went wrong on the server side.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: General error message indicating a server issue.
              message:
                type: string
                description: Additional details about the error, if available.
          examples:
            serverErrorExample:
              summary: Example response for a server error
              value:
                error: Internal Server Error
                message: An unexpected error occurred. Please try again later.
